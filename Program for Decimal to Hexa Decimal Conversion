/*************** Program for Decimal to Hexa Decimal Conversion *************/

/****** Author: Ayush Prasad, 2019B101134  **********/

/***********************************************/

#include<stdio.h>

#define TRUE 1

#define FALSE 0

#define SIZE 20

struct Stack

{

    int item[SIZE];

    int top;

};

struct Stack p;

/*************************************************/

void initialize(void)

{

    p.top=-1;

}

/*************************************************/

void push(char x)

{

    if(p.top==SIZE-1)

        printf("stack overflows");

    else

    {

        p.top=p.top+1;

        p.item[p.top]=x;

    }

}

/*************************************************/

int pop(void)

{

    int x;

    if(p.top==-1)

        printf("stack underflow");

    else

    {

        x=p.item[p.top];

        p.top=p.top-1;

        return x;

    }

}

/*************************************************/

int empty(void)

{

    if(p.top==-1)

        return TRUE;

    else

        return FALSE;

}

/*************************************************/

char StackTop()

{

    char c;

    c=p.item[p.top];

    return c;

}

/*************************************************/

void dec_to_hex(int n)

{

    char ch[16]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};

    printf("hexadecimal of %d :",n);

    while(n>0)

    {

        push(n%16);

        n=n/16;

    }

    while(p.top!=-1)

    {

        printf("%c",ch[pop()]);

    }printf("\n");

}

int main(void)

{

    int n=270;

    initialize();

    dec_to_hex(n);

    dec_to_hex(644);

    dec_to_hex(7726);

    return 0;

}

/***********************************************/
